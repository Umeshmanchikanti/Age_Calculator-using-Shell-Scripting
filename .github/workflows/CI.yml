name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 3: Check Node and npm versions for debugging
      - name: Check Node.js and npm version
        run: |
          node -v
          npm -v

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build the project
      - name: Build the project
        run: npm run build

      # Step 6: Run tests (if any)
      - name: Run tests
        run: npm test
        continue-on-error: true  # Ensure tests do not halt the workflow

      # Step 7: Debugging before deployment
      - name: Debug Step
        run: |
          echo "Current Directory:"
          pwd
          echo "Files in the directory:"
          ls -al

      # Step 8: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your AWS region

      # Step 9: Deploy to AWS (Example for S3 Deployment)
      - name: Deploy to S3
        run: |
          aws s3 sync ./build s3://umesh27bucket --delete
          echo "Deployment to S3 completed!"

      # Step 10: (Optional) Additional AWS Deployment Commands
      # Example for ECS, Lambda, etc.
      # - name: Deploy to ECS
      #   run: |
      #     aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment
      #
      # - name: Deploy Lambda Function
      #   run: |
      #     aws lambda update-function-code --function-name your-lambda-name --zip-file fileb://path-to-deployment-package.zip

